name: Security and Dependency Updates

'on':
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          backend/target
        key: ${{ runner.os }}-cargo-audit-${{ hashFiles('backend/Cargo.lock') }}

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run Rust security audit
      run: cargo audit --json > rust-audit.json
      working-directory: backend
      continue-on-error: true

    - name: Upload Rust audit results
      uses: actions/upload-artifact@v4
      with:
        name: rust-security-audit
        path: backend/rust-audit.json

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Run npm security audit
      run: npm audit --json > npm-audit.json
      working-directory: frontend
      continue-on-error: true

    - name: Upload npm audit results
      uses: actions/upload-artifact@v4
      with:
        name: npm-security-audit
        path: frontend/npm-audit.json

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Update Rust dependencies
      run: |
        cargo update
        cargo check
      working-directory: backend

    - name: Update npm dependencies
      run: |
        npm update
        npm audit fix --audit-level moderate
      working-directory: frontend

    - name: Create Pull Request for dependency updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'Automated Dependency Updates'
        body: |
          ## Automated Dependency Updates

          This PR contains automated updates to project dependencies.

          ### Changes:
          - Updated Rust crates to latest compatible versions
          - Updated npm packages to latest compatible versions
          - Applied security fixes where available

          ### Testing:
          - [ ] Backend tests pass
          - [ ] Frontend tests pass
          - [ ] Security audits clean

          Please review and merge if all checks pass.
        branch: automated-dependency-updates
        delete-branch: true

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-license
      run: cargo install cargo-license

    - name: Check Rust licenses
      run: |
        cargo license --json > rust-licenses.json
        echo "Rust dependency licenses:"
        cargo license
      working-directory: backend

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install license-checker
      run: npm install -g license-checker

    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Check npm licenses
      run: |
        license-checker --json > npm-licenses.json
        echo "npm dependency licenses:"
        license-checker --summary
      working-directory: frontend

    - name: Upload license reports
      uses: actions/upload-artifact@v4
      with:
        name: license-reports
        path: |
          backend/rust-licenses.json
          frontend/npm-licenses.json

  docker-security-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image for scanning
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        load: true
        tags: econ-graph-backend:scan
        cache-from: type=gha

    - name: Build frontend image for scanning
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        load: true
        tags: econ-graph-frontend:scan
        cache-from: type=gha

    - name: Scan backend image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'econ-graph-backend:scan'
        format: 'sarif'
        output: 'backend-trivy.sarif'

    - name: Scan frontend image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'econ-graph-frontend:scan'
        format: 'sarif'
        output: 'frontend-trivy.sarif'

    - name: Upload backend scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'backend-trivy.sarif'
        category: 'backend-docker'

    - name: Upload frontend scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'frontend-trivy.sarif'
        category: 'frontend-docker'



# Workflow cache refresh: 2025-09-18 10:30:43 PDT
