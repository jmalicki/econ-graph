name: RAM Disk Build Cache

'on':
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run build cache on (defaults to main)'
        required: false
        default: 'main'
        type: string

jobs:
  ramdisk-build-cache:
    name: RAM Disk Build Cache
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || 'main' }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@1.89.0
      with:
        components: rustfmt, clippy

    - name: Setup RAM disk for cargo
      run: |
        echo "Setting up RAM disk for cargo operations..."
        # Create 4GB tmpfs for cargo (conservative approach)
        sudo mkdir -p /tmp/cargo-ramdisk
        sudo mount -t tmpfs -o size=4G tmpfs /tmp/cargo-ramdisk
        sudo chown runner:runner /tmp/cargo-ramdisk
        ln -sf /tmp/cargo-ramdisk ~/.cargo

        # Verify setup
        echo "RAM disk setup complete:"
        df -h /tmp/cargo-ramdisk
        ls -la ~/.cargo
        echo "Available space:"
        df -h ~/.cargo

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          backend/target
        key: ${{ runner.os }}-shared-cargo-v2
        restore-keys: |
          ${{ runner.os }}-shared-cargo-

    - name: Install shared tools
      env:
        CARGO_TARGET_DIR: /tmp/cargo-ramdisk/target
        CARGO_BUILD_TARGET_DIR: /tmp/cargo-ramdisk/target
      run: |
        echo "Installing shared tools..."
        echo "Current PATH: $PATH"
        echo "CARGO_HOME: $CARGO_HOME"
        echo "CARGO_TARGET_DIR: $CARGO_TARGET_DIR"
        echo "HOME: $HOME"

        # Install diesel_cli
        echo "Installing diesel_cli..."
        $HOME/.cargo/bin/cargo install diesel_cli --no-default-features --features postgres --verbose --force

        # Install cargo-audit
        echo "Installing cargo-audit..."
        $HOME/.cargo/bin/cargo install cargo-audit --verbose --force

        # Install cargo-deny
        echo "Installing cargo-deny..."
        $HOME/.cargo/bin/cargo install cargo-deny --verbose --force

        # Verify installations
        echo "Verifying installations..."
        ls -la $HOME/.cargo/bin/
        $HOME/.cargo/bin/diesel --version || echo "diesel not found"
        $HOME/.cargo/bin/cargo-audit --version || echo "cargo-audit not found"
        $HOME/.cargo/bin/cargo-deny --version || echo "cargo-deny not found"
      working-directory: backend

    - name: Build backend
      env:
        CARGO_TARGET_DIR: /tmp/cargo-ramdisk/target
      run: cargo build --verbose
      working-directory: backend



# Workflow cache refresh: 2025-09-18 10:30:43 PDT
