name: Playwright Tests

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v3.7.2, v3.8.0, etc.

jobs:
  grafana-dashboard-validation:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't gate other jobs on this

    steps:
    - uses: actions/checkout@v4

    - name: Setup validation tools
      run: |
        # Install jq for JSON validation
        sudo apt-get update
        sudo apt-get install -y jq

        # Install yq for YAML validation
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq

    - name: Make validation script executable
      run: chmod +x scripts/test-grafana-dashboards.sh

    - name: 🔍 JSON Syntax Validation
      run: ./scripts/test-grafana-dashboards.sh --step=json-syntax
      continue-on-error: true

    - name: 🏗️ Dashboard Structure Validation
      run: ./scripts/test-grafana-dashboards.sh --step=dashboard-structure
      continue-on-error: true

    - name: 🔗 Datasource Consistency Validation
      run: ./scripts/test-grafana-dashboards.sh --step=datasource-consistency
      continue-on-error: true

    - name: 📊 PromQL Query Validation
      run: ./scripts/test-grafana-dashboards.sh --step=promql-queries
      continue-on-error: true

    - name: 📝 LogQL Query Validation
      run: ./scripts/test-grafana-dashboards.sh --step=logql-queries
      continue-on-error: true

    - name: 📋 ConfigMap Structure Validation
      run: ./scripts/test-grafana-dashboards.sh --step=configmap-structure
      continue-on-error: true

    - name: 🔧 Kubernetes Deployment Validation
      run: ./scripts/test-grafana-dashboards.sh --step=k8s-deployment
      continue-on-error: true

    - name: 🎯 Complete Dashboard Validation
      run: ./scripts/test-grafana-dashboards.sh
      continue-on-error: true

    - name: Upload validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: grafana-validation-results-${{ github.ref_name }}
        path: |
          grafana-dashboards/
          k8s/monitoring/grafana-*.yaml
        retention-days: 30

  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: []  # Run independently of grafana validation

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps

    - name: Setup test environment
      run: |
        # Create a simple test server to serve the built frontend
        cd frontend
        npm install -g serve
        serve -s build -l 3000 &
        sleep 10
        curl -f http://localhost:3000 || exit 1

    - name: Run Playwright tests
      working-directory: ./frontend
      run: npx playwright test --reporter=github
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3000

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ github.ref_name }}
        path: frontend/playwright-report/
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-test-results-${{ github.ref_name }}
        path: frontend/test-results/
        retention-days: 30

    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots-${{ github.ref_name }}
        path: frontend/test-results/
        retention-days: 7
